generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Board {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String

  columns Column[]
  members BoardMember[]
  tasks   Task[]
  tags    Tag[]
}

model BoardMember {
  id      String @id @default(cuid())
  userId  String
  Board   Board  @relation(fields: [boardId], references: [id])
  boardId String

  @@index([boardId])
}

model Column {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String

  Board   Board  @relation(fields: [boardId], references: [id])
  boardId String
  order   Int

  tasks      Task[]
  isArchived Boolean @default(false)

  @@index([boardId])
}

model Task {
  id         String           @id @default(cuid())
  createdAt  DateTime         @default(now())
  dueDate DateTime? 
  title      String
  content    String
  authorId   String
  assignedTo AssignedToTask[]
  order      Int
  isArchived Boolean @default(false)

  Column   Column @relation(fields: [columnId], references: [id])
  columnId String

  Board   Board  @relation(fields: [boardId], references: [id])
  boardId String

  Comments Comment[]
  tags     TagsOnTasks[]

  @@index([columnId])
  @@index([boardId])
}

model AssignedToTask {
  id         String   @id @default(cuid())
  userId     String   @unique
  Task       Task     @relation(fields: [taskId], references: [id])
  taskId     String
  assignedAt DateTime @default(now())

  @@index([taskId])
}

model TagsOnTasks {
  id String @id @default(cuid())

  taskId String
  Task   Task   @relation(fields: [taskId], references: [id])
  tagId  String

  @@index([taskId])
}

model Comment {
  id        String    @id @default(cuid())
  authorId  String
  createdAt DateTime  @default(now())
  editedAt  DateTime?
  content   String

  Task   Task   @relation(fields: [taskId], references: [id])
  taskId String

  @@index([taskId])
}

model Tag {
  id    String @id @default(cuid())
  name  String
  color String

  boardId String
  Board   Board  @relation(fields: [boardId], references: [id])

  @@index([boardId])
}
